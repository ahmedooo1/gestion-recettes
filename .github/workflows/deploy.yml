name: CI/CD Gestion Recettes

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Récupérer le code
        uses: actions/checkout@v3

      - name: Installer Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Installer les dépendances backend-node
        run: |
          cd backend-node
          npm install

      - name: Exécuter les tests Jest backend-node
        run: |
          cd backend-node
          npm test

  build-and-push:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Récupérer le code
        uses: actions/checkout@v3



      - name: Se connecter à Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Construire les images Docker
        run: |
          # Construire le service Node.js
          docker build -t ${{ secrets.DOCKER_USERNAME }}/gestion-recettes-node:latest ./backend-node

          # Construire le service PHP
          docker build -t ${{ secrets.DOCKER_USERNAME }}/gestion-recettes-php:latest ./backend-php

          # Construire le service Frontend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/gestion-recettes-frontend:latest ./frontend

      - name: Vérifier les images disponibles
        run: docker images

      - name: Pousser les images sur Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/gestion-recettes-node:latest


  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Déployer via Docker Compose
        run: |
          docker-compose down
          docker-compose up -d
